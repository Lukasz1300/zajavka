<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="projektZajavka2.controller.rest.RestaurantRestControllerTest" time="0.166" tests="10" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="22"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1250"/>
    <property name="java.class.path" value="D:\java nauka\projektZajavka2\target\test-classes;D:\java nauka\projektZajavka2\target\classes;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.3\spring-boot-starter-data-jpa-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.3\spring-boot-starter-aop-3.3.3.jar;C:\Users\L.M\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.3\spring-boot-starter-jdbc-3.3.3.jar;C:\Users\L.M\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-jdbc\6.1.12\spring-jdbc-6.1.12.jar;C:\Users\L.M\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\L.M\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\L.M\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\L.M\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\L.M\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\L.M\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\L.M\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\L.M\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\L.M\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\L.M\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\L.M\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\L.M\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\L.M\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\L.M\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\L.M\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\L.M\.m2\repository\org\springframework\data\spring-data-jpa\3.3.3\spring-data-jpa-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\data\spring-data-commons\3.3.3\spring-data-commons-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-orm\6.1.12\spring-orm-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-context\6.1.12\spring-context-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-tx\6.1.12\spring-tx-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-beans\6.1.12\spring-beans-6.1.12.jar;C:\Users\L.M\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\L.M\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-aspects\6.1.12\spring-aspects-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.3\spring-boot-starter-web-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.3\spring-boot-starter-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot\3.3.3\spring-boot-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.3\spring-boot-autoconfigure-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.3\spring-boot-starter-logging-3.3.3.jar;C:\Users\L.M\.m2\repository\ch\qos\logback\logback-classic\1.5.7\logback-classic-1.5.7.jar;C:\Users\L.M\.m2\repository\ch\qos\logback\logback-core\1.5.7\logback-core-1.5.7.jar;C:\Users\L.M\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\L.M\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\L.M\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\L.M\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.3\spring-boot-starter-json-3.3.3.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.2\jackson-datatype-jdk8-2.17.2.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.2\jackson-module-parameter-names-2.17.2.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.3\spring-boot-starter-tomcat-3.3.3.jar;C:\Users\L.M\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.28\tomcat-embed-core-10.1.28.jar;C:\Users\L.M\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.28\tomcat-embed-el-10.1.28.jar;C:\Users\L.M\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.28\tomcat-embed-websocket-10.1.28.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-web\6.1.12\spring-web-6.1.12.jar;C:\Users\L.M\.m2\repository\io\micrometer\micrometer-observation\1.13.3\micrometer-observation-1.13.3.jar;C:\Users\L.M\.m2\repository\io\micrometer\micrometer-commons\1.13.3\micrometer-commons-1.13.3.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-webmvc\6.1.12\spring-webmvc-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-expression\6.1.12\spring-expression-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.3\spring-boot-starter-security-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-aop\6.1.12\spring-aop-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\security\spring-security-config\6.3.3\spring-security-config-6.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\security\spring-security-web\6.3.3\spring-security-web-6.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.3.3\spring-boot-starter-thymeleaf-3.3.3.jar;C:\Users\L.M\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.2.RELEASE\thymeleaf-spring6-3.1.2.RELEASE.jar;C:\Users\L.M\.m2\repository\org\thymeleaf\thymeleaf\3.1.2.RELEASE\thymeleaf-3.1.2.RELEASE.jar;C:\Users\L.M\.m2\repository\org\attoparser\attoparser\2.0.7.RELEASE\attoparser-2.0.7.RELEASE.jar;C:\Users\L.M\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\L.M\.m2\repository\jakarta\validation\jakarta.validation-api\3.1.0\jakarta.validation-api-3.1.0.jar;C:\Users\L.M\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\L.M\.m2\repository\org\projectlombok\lombok\1.18.34\lombok-1.18.34.jar;C:\Users\L.M\.m2\repository\org\springframework\security\spring-security-test\6.3.3\spring-security-test-6.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\security\spring-security-core\6.3.3\spring-security-core-6.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\security\spring-security-crypto\6.3.3\spring-security-crypto-6.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-core\6.1.12\spring-core-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-jcl\6.1.12\spring-jcl-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-test\6.1.12\spring-test-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.3.3\spring-boot-starter-test-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-test\3.3.3\spring-boot-test-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.3.3\spring-boot-test-autoconfigure-3.3.3.jar;C:\Users\L.M\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\L.M\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\L.M\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\L.M\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\L.M\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\L.M\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\L.M\.m2\repository\org\assertj\assertj-core\3.25.3\assertj-core-3.25.3.jar;C:\Users\L.M\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\L.M\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.3\junit-jupiter-5.10.3.jar;C:\Users\L.M\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.3\junit-jupiter-api-5.10.3.jar;C:\Users\L.M\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\L.M\.m2\repository\org\junit\platform\junit-platform-commons\1.10.3\junit-platform-commons-1.10.3.jar;C:\Users\L.M\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\L.M\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.3\junit-jupiter-params-5.10.3.jar;C:\Users\L.M\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.3\junit-jupiter-engine-5.10.3.jar;C:\Users\L.M\.m2\repository\org\junit\platform\junit-platform-engine\1.10.3\junit-platform-engine-1.10.3.jar;C:\Users\L.M\.m2\repository\org\mockito\mockito-core\5.11.0\mockito-core-5.11.0.jar;C:\Users\L.M\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.19\byte-buddy-agent-1.14.19.jar;C:\Users\L.M\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\L.M\.m2\repository\org\mockito\mockito-junit-jupiter\5.11.0\mockito-junit-jupiter-5.11.0.jar;C:\Users\L.M\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\L.M\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\L.M\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\L.M\.m2\repository\org\springdoc\springdoc-openapi-ui\1.8.0\springdoc-openapi-ui-1.8.0.jar;C:\Users\L.M\.m2\repository\org\springdoc\springdoc-openapi-webmvc-core\1.8.0\springdoc-openapi-webmvc-core-1.8.0.jar;C:\Users\L.M\.m2\repository\org\springdoc\springdoc-openapi-common\1.8.0\springdoc-openapi-common-1.8.0.jar;C:\Users\L.M\.m2\repository\io\swagger\core\v3\swagger-core\2.2.20\swagger-core-2.2.20.jar;C:\Users\L.M\.m2\repository\io\swagger\core\v3\swagger-annotations\2.2.20\swagger-annotations-2.2.20.jar;C:\Users\L.M\.m2\repository\io\swagger\core\v3\swagger-models\2.2.20\swagger-models-2.2.20.jar;C:\Users\L.M\.m2\repository\org\webjars\swagger-ui\5.11.8\swagger-ui-5.11.8.jar;C:\Users\L.M\.m2\repository\io\rest-assured\rest-assured\5.4.0\rest-assured-5.4.0.jar;C:\Users\L.M\.m2\repository\org\apache\groovy\groovy\4.0.22\groovy-4.0.22.jar;C:\Users\L.M\.m2\repository\org\apache\groovy\groovy-xml\4.0.22\groovy-xml-4.0.22.jar;C:\Users\L.M\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\L.M\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\L.M\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\L.M\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\L.M\.m2\repository\org\apache\httpcomponents\httpmime\4.5.13\httpmime-4.5.13.jar;C:\Users\L.M\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\L.M\.m2\repository\io\rest-assured\json-path\5.4.0\json-path-5.4.0.jar;C:\Users\L.M\.m2\repository\org\apache\groovy\groovy-json\4.0.22\groovy-json-4.0.22.jar;C:\Users\L.M\.m2\repository\io\rest-assured\rest-assured-common\5.4.0\rest-assured-common-5.4.0.jar;C:\Users\L.M\.m2\repository\io\rest-assured\xml-path\5.4.0\xml-path-5.4.0.jar;C:\Users\L.M\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\L.M\.m2\repository\org\wiremock\wiremock-jetty12\3.9.1\wiremock-jetty12-3.9.1.jar;C:\Users\L.M\.m2\repository\org\wiremock\wiremock\3.9.1\wiremock-3.9.1.jar;C:\Users\L.M\.m2\repository\com\google\guava\guava\33.2.1-jre\guava-33.2.1-jre.jar;C:\Users\L.M\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\L.M\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\L.M\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\L.M\.m2\repository\com\google\errorprone\error_prone_annotations\2.26.1\error_prone_annotations-2.26.1.jar;C:\Users\L.M\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\L.M\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\L.M\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\L.M\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\L.M\.m2\repository\org\xmlunit\xmlunit-legacy\2.9.1\xmlunit-legacy-2.9.1.jar;C:\Users\L.M\.m2\repository\org\xmlunit\xmlunit-placeholders\2.9.1\xmlunit-placeholders-2.9.1.jar;C:\Users\L.M\.m2\repository\net\javacrumbs\json-unit\json-unit-core\2.40.0\json-unit-core-2.40.0.jar;C:\Users\L.M\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\L.M\.m2\repository\com\github\jknack\handlebars\4.3.1\handlebars-4.3.1.jar;C:\Users\L.M\.m2\repository\com\github\jknack\handlebars-helpers\4.3.1\handlebars-helpers-4.3.1.jar;C:\Users\L.M\.m2\repository\commons-fileupload\commons-fileupload\1.5\commons-fileupload-1.5.jar;C:\Users\L.M\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\L.M\.m2\repository\com\networknt\json-schema-validator\1.5.0\json-schema-validator-1.5.0.jar;C:\Users\L.M\.m2\repository\com\ethlo\time\itu\1.10.2\itu-1.10.2.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.2\jackson-dataformat-yaml-2.17.2.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-server\12.0.12\jetty-server-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-http\12.0.12\jetty-http-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-io\12.0.12\jetty-io-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-proxy\12.0.12\jetty-proxy-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-client\12.0.12\jetty-client-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-alpn-server\12.0.12\jetty-alpn-server-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-alpn-java-server\12.0.12\jetty-alpn-java-server-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-alpn-java-client\12.0.12\jetty-alpn-java-client-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-alpn-client\12.0.12\jetty-alpn-client-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-servlet\12.0.12\jetty-ee10-servlet-12.0.12.jar;C:\Users\L.M\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-security\12.0.12\jetty-security-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-session\12.0.12\jetty-session-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-servlets\12.0.12\jetty-ee10-servlets-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-util\12.0.12\jetty-util-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-webapp\12.0.12\jetty-ee10-webapp-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-ee\12.0.12\jetty-ee-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-xml\12.0.12\jetty-xml-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\http2\jetty-http2-server\12.0.12\jetty-http2-server-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\http2\jetty-http2-common\12.0.12\jetty-http2-common-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\http2\jetty-http2-hpack\12.0.12\jetty-http2-hpack-12.0.12.jar;C:\Users\L.M\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\L.M\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.16.0\jackson-databind-2.16.0.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.16.0\jackson-core-2.16.0.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.16.0\jackson-annotations-2.16.0.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.16.0\jackson-datatype-jsr310-2.16.0.jar;C:\Users\L.M\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="catalina.useNaming" value="false"/>
    <property name="user.timezone" value="Europe/Warsaw"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="22"/>
    <property name="user.country" value="PL"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="C:\Users\L.M\.jdks\openjdk-22.0.1\bin"/>
    <property name="sun.java.command" value="C:\Users\L.M\AppData\Local\Temp\surefire12252920622255486573\surefirebooter-20241020233101246_3.jar C:\Users\L.M\AppData\Local\Temp\surefire12252920622255486573 2024-10-20T23-31-01_011-jvmRun1 surefire-20241020233101246_1tmp surefire_0-20241020233101246_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="D:\java nauka\projektZajavka2\target\test-classes;D:\java nauka\projektZajavka2\target\classes;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.3\spring-boot-starter-data-jpa-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.3\spring-boot-starter-aop-3.3.3.jar;C:\Users\L.M\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.3\spring-boot-starter-jdbc-3.3.3.jar;C:\Users\L.M\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-jdbc\6.1.12\spring-jdbc-6.1.12.jar;C:\Users\L.M\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\L.M\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\L.M\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\L.M\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\L.M\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\L.M\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\L.M\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\L.M\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\L.M\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\L.M\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\L.M\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\L.M\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\L.M\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\L.M\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\L.M\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\L.M\.m2\repository\org\springframework\data\spring-data-jpa\3.3.3\spring-data-jpa-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\data\spring-data-commons\3.3.3\spring-data-commons-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-orm\6.1.12\spring-orm-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-context\6.1.12\spring-context-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-tx\6.1.12\spring-tx-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-beans\6.1.12\spring-beans-6.1.12.jar;C:\Users\L.M\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\L.M\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-aspects\6.1.12\spring-aspects-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.3\spring-boot-starter-web-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.3\spring-boot-starter-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot\3.3.3\spring-boot-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.3\spring-boot-autoconfigure-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.3\spring-boot-starter-logging-3.3.3.jar;C:\Users\L.M\.m2\repository\ch\qos\logback\logback-classic\1.5.7\logback-classic-1.5.7.jar;C:\Users\L.M\.m2\repository\ch\qos\logback\logback-core\1.5.7\logback-core-1.5.7.jar;C:\Users\L.M\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\L.M\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\L.M\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\L.M\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.3\spring-boot-starter-json-3.3.3.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.2\jackson-datatype-jdk8-2.17.2.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.2\jackson-module-parameter-names-2.17.2.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.3\spring-boot-starter-tomcat-3.3.3.jar;C:\Users\L.M\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.28\tomcat-embed-core-10.1.28.jar;C:\Users\L.M\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.28\tomcat-embed-el-10.1.28.jar;C:\Users\L.M\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.28\tomcat-embed-websocket-10.1.28.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-web\6.1.12\spring-web-6.1.12.jar;C:\Users\L.M\.m2\repository\io\micrometer\micrometer-observation\1.13.3\micrometer-observation-1.13.3.jar;C:\Users\L.M\.m2\repository\io\micrometer\micrometer-commons\1.13.3\micrometer-commons-1.13.3.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-webmvc\6.1.12\spring-webmvc-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-expression\6.1.12\spring-expression-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.3\spring-boot-starter-security-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-aop\6.1.12\spring-aop-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\security\spring-security-config\6.3.3\spring-security-config-6.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\security\spring-security-web\6.3.3\spring-security-web-6.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.3.3\spring-boot-starter-thymeleaf-3.3.3.jar;C:\Users\L.M\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.2.RELEASE\thymeleaf-spring6-3.1.2.RELEASE.jar;C:\Users\L.M\.m2\repository\org\thymeleaf\thymeleaf\3.1.2.RELEASE\thymeleaf-3.1.2.RELEASE.jar;C:\Users\L.M\.m2\repository\org\attoparser\attoparser\2.0.7.RELEASE\attoparser-2.0.7.RELEASE.jar;C:\Users\L.M\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\L.M\.m2\repository\jakarta\validation\jakarta.validation-api\3.1.0\jakarta.validation-api-3.1.0.jar;C:\Users\L.M\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\L.M\.m2\repository\org\projectlombok\lombok\1.18.34\lombok-1.18.34.jar;C:\Users\L.M\.m2\repository\org\springframework\security\spring-security-test\6.3.3\spring-security-test-6.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\security\spring-security-core\6.3.3\spring-security-core-6.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\security\spring-security-crypto\6.3.3\spring-security-crypto-6.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-core\6.1.12\spring-core-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-jcl\6.1.12\spring-jcl-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\spring-test\6.1.12\spring-test-6.1.12.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.3.3\spring-boot-starter-test-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-test\3.3.3\spring-boot-test-3.3.3.jar;C:\Users\L.M\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.3.3\spring-boot-test-autoconfigure-3.3.3.jar;C:\Users\L.M\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\L.M\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\L.M\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\L.M\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\L.M\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\L.M\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\L.M\.m2\repository\org\assertj\assertj-core\3.25.3\assertj-core-3.25.3.jar;C:\Users\L.M\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\L.M\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.3\junit-jupiter-5.10.3.jar;C:\Users\L.M\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.3\junit-jupiter-api-5.10.3.jar;C:\Users\L.M\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\L.M\.m2\repository\org\junit\platform\junit-platform-commons\1.10.3\junit-platform-commons-1.10.3.jar;C:\Users\L.M\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\L.M\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.3\junit-jupiter-params-5.10.3.jar;C:\Users\L.M\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.3\junit-jupiter-engine-5.10.3.jar;C:\Users\L.M\.m2\repository\org\junit\platform\junit-platform-engine\1.10.3\junit-platform-engine-1.10.3.jar;C:\Users\L.M\.m2\repository\org\mockito\mockito-core\5.11.0\mockito-core-5.11.0.jar;C:\Users\L.M\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.19\byte-buddy-agent-1.14.19.jar;C:\Users\L.M\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\L.M\.m2\repository\org\mockito\mockito-junit-jupiter\5.11.0\mockito-junit-jupiter-5.11.0.jar;C:\Users\L.M\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\L.M\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\L.M\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\L.M\.m2\repository\org\springdoc\springdoc-openapi-ui\1.8.0\springdoc-openapi-ui-1.8.0.jar;C:\Users\L.M\.m2\repository\org\springdoc\springdoc-openapi-webmvc-core\1.8.0\springdoc-openapi-webmvc-core-1.8.0.jar;C:\Users\L.M\.m2\repository\org\springdoc\springdoc-openapi-common\1.8.0\springdoc-openapi-common-1.8.0.jar;C:\Users\L.M\.m2\repository\io\swagger\core\v3\swagger-core\2.2.20\swagger-core-2.2.20.jar;C:\Users\L.M\.m2\repository\io\swagger\core\v3\swagger-annotations\2.2.20\swagger-annotations-2.2.20.jar;C:\Users\L.M\.m2\repository\io\swagger\core\v3\swagger-models\2.2.20\swagger-models-2.2.20.jar;C:\Users\L.M\.m2\repository\org\webjars\swagger-ui\5.11.8\swagger-ui-5.11.8.jar;C:\Users\L.M\.m2\repository\io\rest-assured\rest-assured\5.4.0\rest-assured-5.4.0.jar;C:\Users\L.M\.m2\repository\org\apache\groovy\groovy\4.0.22\groovy-4.0.22.jar;C:\Users\L.M\.m2\repository\org\apache\groovy\groovy-xml\4.0.22\groovy-xml-4.0.22.jar;C:\Users\L.M\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\L.M\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\L.M\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\L.M\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\L.M\.m2\repository\org\apache\httpcomponents\httpmime\4.5.13\httpmime-4.5.13.jar;C:\Users\L.M\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\L.M\.m2\repository\io\rest-assured\json-path\5.4.0\json-path-5.4.0.jar;C:\Users\L.M\.m2\repository\org\apache\groovy\groovy-json\4.0.22\groovy-json-4.0.22.jar;C:\Users\L.M\.m2\repository\io\rest-assured\rest-assured-common\5.4.0\rest-assured-common-5.4.0.jar;C:\Users\L.M\.m2\repository\io\rest-assured\xml-path\5.4.0\xml-path-5.4.0.jar;C:\Users\L.M\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\L.M\.m2\repository\org\wiremock\wiremock-jetty12\3.9.1\wiremock-jetty12-3.9.1.jar;C:\Users\L.M\.m2\repository\org\wiremock\wiremock\3.9.1\wiremock-3.9.1.jar;C:\Users\L.M\.m2\repository\com\google\guava\guava\33.2.1-jre\guava-33.2.1-jre.jar;C:\Users\L.M\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\L.M\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\L.M\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\L.M\.m2\repository\com\google\errorprone\error_prone_annotations\2.26.1\error_prone_annotations-2.26.1.jar;C:\Users\L.M\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\L.M\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\L.M\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\L.M\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\L.M\.m2\repository\org\xmlunit\xmlunit-legacy\2.9.1\xmlunit-legacy-2.9.1.jar;C:\Users\L.M\.m2\repository\org\xmlunit\xmlunit-placeholders\2.9.1\xmlunit-placeholders-2.9.1.jar;C:\Users\L.M\.m2\repository\net\javacrumbs\json-unit\json-unit-core\2.40.0\json-unit-core-2.40.0.jar;C:\Users\L.M\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\L.M\.m2\repository\com\github\jknack\handlebars\4.3.1\handlebars-4.3.1.jar;C:\Users\L.M\.m2\repository\com\github\jknack\handlebars-helpers\4.3.1\handlebars-helpers-4.3.1.jar;C:\Users\L.M\.m2\repository\commons-fileupload\commons-fileupload\1.5\commons-fileupload-1.5.jar;C:\Users\L.M\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\L.M\.m2\repository\com\networknt\json-schema-validator\1.5.0\json-schema-validator-1.5.0.jar;C:\Users\L.M\.m2\repository\com\ethlo\time\itu\1.10.2\itu-1.10.2.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.2\jackson-dataformat-yaml-2.17.2.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-server\12.0.12\jetty-server-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-http\12.0.12\jetty-http-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-io\12.0.12\jetty-io-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-proxy\12.0.12\jetty-proxy-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-client\12.0.12\jetty-client-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-alpn-server\12.0.12\jetty-alpn-server-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-alpn-java-server\12.0.12\jetty-alpn-java-server-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-alpn-java-client\12.0.12\jetty-alpn-java-client-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-alpn-client\12.0.12\jetty-alpn-client-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-servlet\12.0.12\jetty-ee10-servlet-12.0.12.jar;C:\Users\L.M\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-security\12.0.12\jetty-security-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-session\12.0.12\jetty-session-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-servlets\12.0.12\jetty-ee10-servlets-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-util\12.0.12\jetty-util-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-webapp\12.0.12\jetty-ee10-webapp-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-ee\12.0.12\jetty-ee-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\jetty-xml\12.0.12\jetty-xml-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\http2\jetty-http2-server\12.0.12\jetty-http2-server-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\http2\jetty-http2-common\12.0.12\jetty-http2-common-12.0.12.jar;C:\Users\L.M\.m2\repository\org\eclipse\jetty\http2\jetty-http2-hpack\12.0.12\jetty-http2-hpack-12.0.12.jar;C:\Users\L.M\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\L.M\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.16.0\jackson-databind-2.16.0.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.16.0\jackson-core-2.16.0.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.16.0\jackson-annotations-2.16.0.jar;C:\Users\L.M\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.16.0\jackson-datatype-jsr310-2.16.0.jar;C:\Users\L.M\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\L.M"/>
    <property name="user.language" value="pl"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-04-16"/>
    <property name="java.home" value="C:\Users\L.M\.jdks\openjdk-22.0.1"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="D:\java nauka\projektZajavka2"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\L.M\AppData\Local\Temp\surefire12252920622255486573\surefirebooter-20241020233101246_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="22.0.1+8-16"/>
    <property name="user.name" value="L.M"/>
    <property name="stdout.encoding" value="Cp1250"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="LOG_FILE" value="logs/myapp.log"/>
    <property name="localRepository" value="C:\Users\L.M\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\L.M\AppData\Local\Temp\"/>
    <property name="idea.version" value="2022.2.3"/>
    <property name="catalina.home" value="C:\Users\L.M\AppData\Local\Temp\tomcat.0.3520003181026442557"/>
    <property name="com.zaxxer.hikari.pool_number" value="3"/>
    <property name="java.version" value="22.0.1"/>
    <property name="user.dir" value="D:\java nauka\projektZajavka2"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="6496"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="catalina.base" value="C:\Users\L.M\AppData\Local\Temp\tomcat.0.6782744746495749523"/>
    <property name="native.encoding" value="Cp1250"/>
    <property name="java.library.path" value="C:\Users\L.M\.jdks\openjdk-22.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files\Microsoft\jdk-11.0.12.7-hotspot\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Git\cmd;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Git LFS;C:\Users\L.M\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Azure Data Studio\bin;C:\Users\L.M\.dotnet\tools;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.3\bin;;C:\Users\L.M\Downloads\apache-maven-3.9.6\bin;C:\Program Files\Java\jdk-19\bin;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1250"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="22.0.1+8-16"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="66.0"/>
  </properties>
  <testcase name="shouldCreateNewRestaurant" classname="projektZajavka2.controller.rest.RestaurantRestControllerTest" time="0.027">
    <system-out><![CDATA[2024-10-20T23:31:18.683+02:00  INFO 6496 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [projektZajavka2.controller.rest.RestaurantRestControllerTest]: RestaurantRestControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-10-20T23:31:18.685+02:00  INFO 6496 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration projektZajavka2.ProjektZajavka2Application for test class projektZajavka2.controller.rest.RestaurantRestControllerTest
2024-10-20T23:31:18.699+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
owner: RestaurantOwner(id=3, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.698056200)
2024-10-20T23:31:18.701+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Restauracja zapisana: Restaurant(id=1, owner=RestaurantOwner(id=3, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.698056200), name=Nowa Restauracja, address=Ulica 123, Miasto, phoneNumber=+1234567890, email=nowa@restauracja.com, description=null, createdAt=2024-10-20T23:31:18.701059500, menuItems=[])
2024-10-20T23:31:18.703+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
Nowy owner: RestaurantOwner(id=4, name=Nowy Właściciel, email=nowywłaściciel@example.com, phoneNumber=+1234567891, restaurants=[], createdAt=2024-10-20T23:31:18.702058700)
2024-10-20T23:31:18.717+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
]]></system-out>
  </testcase>
  <testcase name="powinnoZwracac404DlaNieistniejacejRestauracji" classname="projektZajavka2.controller.rest.RestaurantRestControllerTest" time="0.014">
    <system-out><![CDATA[2024-10-20T23:31:18.730+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
owner: RestaurantOwner(id=5, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.729894900)
2024-10-20T23:31:18.732+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Restauracja zapisana: Restaurant(id=3, owner=RestaurantOwner(id=5, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.729894900), name=Nowa Restauracja, address=Ulica 123, Miasto, phoneNumber=+1234567890, email=nowa@restauracja.com, description=null, createdAt=2024-10-20T23:31:18.731889, menuItems=[])
2024-10-20T23:31:18.737+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.address,
        r1_0.created_at,
        r1_0.description,
        r1_0.email,
        r1_0.name,
        o1_0.id,
        o1_0.created_at,
        o1_0.email,
        o1_0.name,
        o1_0.phone_number,
        r1_0.phone_number 
    from
        restaurants r1_0 
    left join
        restaurant_owners o1_0 
            on o1_0.id=r1_0.owner_id 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.address,
        r1_0.created_at,
        r1_0.description,
        r1_0.email,
        r1_0.name,
        o1_0.id,
        o1_0.created_at,
        o1_0.email,
        o1_0.name,
        o1_0.phone_number,
        r1_0.phone_number 
    from
        restaurants r1_0 
    left join
        restaurant_owners o1_0 
            on o1_0.id=r1_0.owner_id 
    where
        r1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="powinnoZwrocicRestauracjePoOwnerId" classname="projektZajavka2.controller.rest.RestaurantRestControllerTest" time="0.017">
    <system-out><![CDATA[2024-10-20T23:31:18.747+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
owner: RestaurantOwner(id=6, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.746887300)
2024-10-20T23:31:18.748+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Restauracja zapisana: Restaurant(id=4, owner=RestaurantOwner(id=6, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.746887300), name=Nowa Restauracja, address=Ulica 123, Miasto, phoneNumber=+1234567890, email=nowa@restauracja.com, description=null, createdAt=2024-10-20T23:31:18.748891100, menuItems=[])
2024-10-20T23:31:18.754+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.address,
        r1_0.created_at,
        r1_0.description,
        r1_0.email,
        r1_0.name,
        r1_0.owner_id,
        r1_0.phone_number 
    from
        restaurants r1_0 
    where
        r1_0.owner_id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.address,
        r1_0.created_at,
        r1_0.description,
        r1_0.email,
        r1_0.name,
        r1_0.owner_id,
        r1_0.phone_number 
    from
        restaurants r1_0 
    where
        r1_0.owner_id=?
]]></system-out>
  </testcase>
  <testcase name="shouldUpdateExistingRestaurant" classname="projektZajavka2.controller.rest.RestaurantRestControllerTest" time="0.012">
    <system-out><![CDATA[2024-10-20T23:31:18.764+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
owner: RestaurantOwner(id=7, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.763894)
2024-10-20T23:31:18.766+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Restauracja zapisana: Restaurant(id=5, owner=RestaurantOwner(id=7, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.763894), name=Nowa Restauracja, address=Ulica 123, Miasto, phoneNumber=+1234567890, email=nowa@restauracja.com, description=null, createdAt=2024-10-20T23:31:18.765888400, menuItems=[])
]]></system-out>
  </testcase>
  <testcase name="shouldDeleteRestaurantWhenIdExists" classname="projektZajavka2.controller.rest.RestaurantRestControllerTest" time="0.012">
    <system-out><![CDATA[2024-10-20T23:31:18.777+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
owner: RestaurantOwner(id=8, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.776886900)
2024-10-20T23:31:18.778+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Restauracja zapisana: Restaurant(id=6, owner=RestaurantOwner(id=8, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.776886900), name=Nowa Restauracja, address=Ulica 123, Miasto, phoneNumber=+1234567890, email=nowa@restauracja.com, description=null, createdAt=2024-10-20T23:31:18.778892700, menuItems=[])
]]></system-out>
  </testcase>
  <testcase name="shouldReturnRestaurantWhenIdExists" classname="projektZajavka2.controller.rest.RestaurantRestControllerTest" time="0.011">
    <system-out><![CDATA[2024-10-20T23:31:18.790+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
owner: RestaurantOwner(id=9, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.789887200)
2024-10-20T23:31:18.792+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Restauracja zapisana: Restaurant(id=7, owner=RestaurantOwner(id=9, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.789887200), name=Nowa Restauracja, address=Ulica 123, Miasto, phoneNumber=+1234567890, email=nowa@restauracja.com, description=null, createdAt=2024-10-20T23:31:18.791889800, menuItems=[])
]]></system-out>
  </testcase>
  <testcase name="shouldReturnNotFoundWhenDeletingNonExistingRestaurant" classname="projektZajavka2.controller.rest.RestaurantRestControllerTest" time="0.009">
    <system-out><![CDATA[2024-10-20T23:31:18.801+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
owner: RestaurantOwner(id=10, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.801888800)
2024-10-20T23:31:18.803+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Restauracja zapisana: Restaurant(id=8, owner=RestaurantOwner(id=10, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.801888800), name=Nowa Restauracja, address=Ulica 123, Miasto, phoneNumber=+1234567890, email=nowa@restauracja.com, description=null, createdAt=2024-10-20T23:31:18.802887400, menuItems=[])
2024-10-20T23:31:18.806+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.address,
        r1_0.created_at,
        r1_0.description,
        r1_0.email,
        r1_0.name,
        o1_0.id,
        o1_0.created_at,
        o1_0.email,
        o1_0.name,
        o1_0.phone_number,
        r1_0.phone_number 
    from
        restaurants r1_0 
    left join
        restaurant_owners o1_0 
            on o1_0.id=r1_0.owner_id 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.address,
        r1_0.created_at,
        r1_0.description,
        r1_0.email,
        r1_0.name,
        o1_0.id,
        o1_0.created_at,
        o1_0.email,
        o1_0.name,
        o1_0.phone_number,
        r1_0.phone_number 
    from
        restaurants r1_0 
    left join
        restaurant_owners o1_0 
            on o1_0.id=r1_0.owner_id 
    where
        r1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="powinnoZwrocicRestauracjePoId" classname="projektZajavka2.controller.rest.RestaurantRestControllerTest" time="0.011">
    <system-out><![CDATA[2024-10-20T23:31:18.812+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
owner: RestaurantOwner(id=11, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.812888800)
2024-10-20T23:31:18.814+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Restauracja zapisana: Restaurant(id=9, owner=RestaurantOwner(id=11, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.812888800), name=Nowa Restauracja, address=Ulica 123, Miasto, phoneNumber=+1234567890, email=nowa@restauracja.com, description=null, createdAt=2024-10-20T23:31:18.813891, menuItems=[])
]]></system-out>
  </testcase>
  <testcase name="shouldReturnNotFoundWhenUpdatingNonExistingRestaurant" classname="projektZajavka2.controller.rest.RestaurantRestControllerTest" time="0.013">
    <system-out><![CDATA[2024-10-20T23:31:18.823+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
owner: RestaurantOwner(id=12, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.822888700)
2024-10-20T23:31:18.825+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Restauracja zapisana: Restaurant(id=10, owner=RestaurantOwner(id=12, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.822888700), name=Nowa Restauracja, address=Ulica 123, Miasto, phoneNumber=+1234567890, email=nowa@restauracja.com, description=null, createdAt=2024-10-20T23:31:18.825887800, menuItems=[])
2024-10-20T23:31:18.831+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.address,
        r1_0.created_at,
        r1_0.description,
        r1_0.email,
        r1_0.name,
        o1_0.id,
        o1_0.created_at,
        o1_0.email,
        o1_0.name,
        o1_0.phone_number,
        r1_0.phone_number 
    from
        restaurants r1_0 
    left join
        restaurant_owners o1_0 
            on o1_0.id=r1_0.owner_id 
    where
        r1_0.id=?
Hibernate: 
    select
        r1_0.id,
        r1_0.address,
        r1_0.created_at,
        r1_0.description,
        r1_0.email,
        r1_0.name,
        o1_0.id,
        o1_0.created_at,
        o1_0.email,
        o1_0.name,
        o1_0.phone_number,
        r1_0.phone_number 
    from
        restaurants r1_0 
    left join
        restaurant_owners o1_0 
            on o1_0.id=r1_0.owner_id 
    where
        r1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="powinnoZwrocicWszystkieRestauracje" classname="projektZajavka2.controller.rest.RestaurantRestControllerTest" time="0.012">
    <system-out><![CDATA[2024-10-20T23:31:18.837+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurant_owners
        (created_at, email, name, phone_number, id) 
    values
        (?, ?, ?, ?, default)
owner: RestaurantOwner(id=13, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.836889300)
2024-10-20T23:31:18.838+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        restaurants
        (address, created_at, description, email, name, owner_id, phone_number, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Restauracja zapisana: Restaurant(id=11, owner=RestaurantOwner(id=13, name=Jakis Właściciel, email=właściciel@example.com, phoneNumber=+123456789, restaurants=[], createdAt=2024-10-20T23:31:18.836889300), name=Nowa Restauracja, address=Ulica 123, Miasto, phoneNumber=+1234567890, email=nowa@restauracja.com, description=null, createdAt=2024-10-20T23:31:18.838890900, menuItems=[])
2024-10-20T23:31:18.843+02:00 DEBUG 6496 --- [           main] org.hibernate.SQL                        : 
    select
        r1_0.id,
        r1_0.address,
        r1_0.created_at,
        r1_0.description,
        r1_0.email,
        r1_0.name,
        r1_0.owner_id,
        r1_0.phone_number 
    from
        restaurants r1_0
Hibernate: 
    select
        r1_0.id,
        r1_0.address,
        r1_0.created_at,
        r1_0.description,
        r1_0.email,
        r1_0.name,
        r1_0.owner_id,
        r1_0.phone_number 
    from
        restaurants r1_0
]]></system-out>
  </testcase>
</testsuite>